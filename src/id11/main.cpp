//
// Run: clang++ -stdlib=libc++ -std=c++98 -pedantic -I`pwd`/../../include  main.cpp; time ./a.out;
//

#include <cstdint> // uint64_t
#include <cstdio> //printf
#include <list>

int main(void) {
    // Solution using brute force :(
    //
    // a b c d e
    // f g h i j
    // k l u v o
    // p q r s t
    //
    // Potential optimisations:
    // hint 0: a * b * c * d = 0 with a or b or c or d set to 0 => prevent computations
    // hint 1: abcd, bcde = (abcd/a)*e                          => cost 2 operations instead of 3
    // hint 2:
    int m = 20; 
    int n = 20;
    int ar[400] = {
     8, 2,22,97,38,15, 0,40, 0,75, 4, 5, 7,78,52,12,50,77,91, 8, // 0 -> m
    49,49,99,40,17,81,18,57,60,87,17,40,98,43,69,48, 4,56,62, 0,
    81,49,31,73,55,79,14,29,93,71,40,67,53,88,30, 3,49,13,36,65,
    52,70,95,23, 4,60,11,42,69,24,68,56, 1,32,56,71,37, 2,36,91,
    22,31,16,71,51,67,63,89,41,92,36,54,22,40,40,28,66,33,13,80,
    24,47,32,60,99, 3,45, 2,44,75,33,53,78,36,84,20,35,17,12,50,
    32,98,81,28,64,23,67,10,26,38,40,67,59,54,70,66,18,38,64,70,
    67,26,20,68, 2,62,12,20,95,63,94,39,63, 8,40,91,66,49,94,21,
    24,55,58, 5,66,73,99,26,97,17,78,78,96,83,14,88,34,89,63,72,
    21,36,23, 9,75, 0,76,44,20,45,35,14, 0,61,33,97,34,31,33,95,
    78,17,53,28,22,75,31,67,15,94, 3,80, 4,62,16,14, 9,53,56,92,
    16,39, 5,42,96,35,31,47,55,58,88,24, 0,17,54,24,36,29,85,57,
    86,56, 0,48,35,71,89, 7, 5,44,44,37,44,60,21,58,51,54,17,58,
    19,80,81,68, 5,94,47,69,28,73,92,13,86,52,17,77, 4,89,55,40,
     4,52, 8,83,97,35,99,16, 7,97,57,32,16,26,26,79,33,27,98,66,
    88,36,68,87,57,62,20,72, 3,46,33,67,46,55,12,32,63,93,53,69,
     4,42,16,73,38,25,39,11,24,94,72,18, 8,46,29,32,40,62,76,36,
    20,69,36,41,72,30,23,88,34,62,99,69,82,67,59,85,74, 4,36,16,
    20,73,35,29,78,31,90, 1,74,31,49,71,48,86,81,16,23,57, 5,54,
     1,70,54,71,83,51,54,69,16,92,33,48,61,43,52, 1,89,19,67,48
    // 0
    // |
    // v
    // n
    };
    uint64_t r = 0;
    uint64_t mx = 0;
    int a = 0;
    int b = 0;
    int c = 0;
    int d = 0;
    int f = 0;
    int k = 0;
    int p = 0;
    int g = 0;
    int u = 0;
    int s = 0;
    int l = 0;
    int h = 0;
    for (uint64_t i = 0; i<m ;i++) {
        for (uint64_t j = 0; j<n ;j++) {
            if (i<=(m-4)) {
                // a->d
                a = ar[i+m*j];
                b = ar[i+1+m*j];
                c = ar[i+2+m*j];
                d = ar[i+3+m*j];
                r = a*b*c*d;
                mx = (r > mx) ? r : mx;
            }
            if (j<=(n-4)) {
                // a->p
                f = ar[i+(j+1)*m];
                k = ar[i+(j+2)*m];
                p = ar[i+(j+3)*m];
                r = a*f*k*p;
                mx = (r > mx) ? r : mx;
            }
            if (j<=(n-4) && i<=(m-4)) {
                // a->s
                g = ar[i+1+m*(j+1)];
                u = ar[i+2+m*(j+2)];
                s = ar[i+3+m*(j+3)];
                r = a*g*u*s;
                mx = (r > mx) ? r : mx;
                // p->d
                p = ar[i+m*(j+3)];
                l = ar[i+1+m*(j+2)];
                h = ar[i+2+m*(j+1)];
                r = p*l*h*d;
                mx = (r > mx) ? r : mx;
            }
        }
    }
    printf("Answer: %llu \n", mx);
    return 0;
}


